<?php
/**
 * @file
 * Charts module file that provides hook_theme.
 */
use \Drupal\Core\Template\Attribute;
use Drupal\charts\Settings\Highcharts\ChartType;
use Drupal\charts\Settings\Highcharts\ChartTitle;
use Drupal\charts\Settings\Highcharts\Xaxis;
use Drupal\charts\Settings\Highcharts\ChartLabel;
use Drupal\charts\Settings\Highcharts\Yaxis;
use Drupal\charts\Settings\Highcharts\YaxisTitle;
use Drupal\charts\Settings\Highcharts\DataLabelStatus;
use Drupal\charts\Settings\Highcharts\DataLabels;
use Drupal\charts\Settings\Highcharts\PlotOptions;
use Drupal\charts\Settings\Highcharts\Tooltip;
use Drupal\charts\Settings\Highcharts\ChartCredits;
use Drupal\charts\Settings\Highcharts\ChartLegend;
use Drupal\charts\Settings\Highcharts\Highcharts;

// Store Charts preprocess theme functions in a separate .inc file.
\Drupal::moduleHandler()->loadInclude('charts', 'inc', 'charts.theme');
//\Drupal::moduleHandler()->loadInclude('charts', 'inc', 'includes/charts.classes');

/**
* Implements hook_theme().
*/


/**
* Implements hook_theme().
* @param $existing
* @param $type
* @param $theme
* @param $path
* @return array
*/
function charts_theme($existing, $type, $theme, $path) {
  return array(
    'views_view_charts' => array(
      'variables' => array('view' => NULL, 'row' => NULL),
    )
  );
}

function theme_views_view_charts($variables){
    $options = $variables['view']->style_plugin->options;

    $view = $variables['view'];
    drupal_set_message(print_r(json_encode($view->style_plugin->options['library']), 1).' vhg');
    $library = $view->style_plugin->options['library'];
    $variables['data'] = array();

    $valueField = $view->style_plugin->options['data_fields'];
    array_pop($valueField);

    $labelField = $view->style_plugin->options['label_field'];

    $color = $view->style_plugin->options['field_colors'];

    $data = array();

    foreach ($view->result as $id => $row) {
        $numberFields = 0;
        $rowData = array();
        foreach($valueField as $fieldId => $rowDataValue) {
            $rowData[$numberFields] = array(
                'value' => $view->field[$fieldId]->getValue($row),
                'label_field' => $view->field[$labelField]->getValue($row),
                'label' => $view->field[$fieldId]->label(),
                'color' => $color[$fieldId],
            );
            $numberFields++;
        }
        $data[$id] = $rowData;
    }

    $categories = array();
    $seriesData = array();

    for ($i = 0; $i < count($data[0]); $i++){

        $seriesRowData = array('name' => '','color' => '', 'data' => array());
        for($j = 0; $j < count($data); $j++) {
            $categories[$j] = $data[$j][$i]['label_field'];
            $seriesRowData['name'] = $data[$j][$i]['label'];
            $seriesRowData['color'] = $data[$j][$i]['color'];
            array_push($seriesRowData['data'],((int)($data[$j][$i]['value'])));
        }
        array_push($seriesData, $seriesRowData);
    }
    $service = \Drupal::service('charts.charts_service');
    $service->setLibrarySelected($view->style_plugin->options['library']);

    //Handles the toggling from one library to another
    switch($library){
        case 'google':
            $googleData = renderGoogleCharts($categories, $seriesData);
            $googleAttributes = array('id'=>'chart', 'class' => 'chart-google','data-chart' => $googleData);
            $attributes = new Attribute($googleAttributes);
            //return '<div id="chart">'.'Google'.'</div>';
            return '<div ' . $attributes . '></div>';
            //break;
        case 'highcharts':
            $highchart = renderHigchartsCharts($options, $categories, $seriesData);
            $highchartAttributes = array('class' => 'charts-highchart','data-chart' => json_encode($highchart));
            $attributes = new Attribute($highchartAttributes);
            return '<div ' . $attributes . '></div>';
            //break;
        case 'C3':
            drupal_set_message('C3 in switch');
            //return '<h2> ' . 'C3 to be implemented' . '</h2>';
            //break;
            return '<div id="chart">'.'C3'.'</div>';
        default:
    }
}

/**
 * Creates a JSON Object formatted for Highcharts to use
 * @param $options
 * @param array $categories
 * @param array $seriesData
 * @return Highcharts
 */
function renderHigchartsCharts($options, $categories = array(), $seriesData = array()){
    $chart = new ChartType();
    $chart->setType('bar');
    $chartTitle = new ChartTitle();
    $chartTitle->setText($options['title']);
    $chartXaxis = new Xaxis();
    $chartLabels = new ChartLabel();
    //$chartLabels->setRotation($options['xaxis_labels_rotation']);
    $chartXaxis->setCategories($categories);
    $chartTitle->setText($options['title']);
    $chartXaxis->setTitle($chartTitle);
    $chartXaxis->setLabels($chartLabels);
    $chartYaxis = new Yaxis();
    $yAxisTitle = new YaxisTitle();
    $yAxisTitle->setText($options['yaxis_title']);
    $chartYaxis->setMin($options['yaxis_min']);
    //$chartYaxis->max = $options['yaxis_max'];
    $chartYaxis->setTitle($yAxisTitle);
    $dLabels = new DataLabelStatus();
    $dataLabels = new DataLabels();
    $dataLabels->setDataLabels($dLabels);
    $barPlotOptns = new PlotOptions();
    $barPlotOptns->setBar($dataLabels);
    $chartTooltip = new Tooltip();
    $chartCredits = new ChartCredits();
    $chartLegend = new ChartLegend();

    $highchart = new Highcharts();
    $highchart->setChart($chart);
    $highchart->setTitle($chartTitle);
    $highchart->setXAxis($chartXaxis);
    $highchart->setYAxis($chartYaxis);
    $highchart->setTooltip($chartTooltip);
    $highchart->setPlotOptions($barPlotOptns);
    $highchart->setCredits($chartCredits);
    $highchart->setLegend($chartLegend);
    $highchart->setSeries($seriesData);

    return $highchart;
}

/**
 * Creates a JSON Object formatted for Google charts to use
 * @param array $categories
 * @param array $seriesData
 * @return string
 */
function renderGoogleCharts($categories = array(), $seriesData = array()){
    $dataTable = array();
    $dataTableHeader = array('dfd');
    $dataTableRows = array();
    $j = 0;
    foreach ($seriesData as $key=>$category){

        array_push($dataTableHeader, $category['name']);
        $rowDataTable = [];
        array_push($rowDataTable, $categories[$key]);

        for ($i = 0; $i < count($seriesData); $i++){

            array_push($rowDataTable, $seriesData[$i]['data'][$j]);
        }
        $j++;
        array_push($dataTableRows, $rowDataTable);
    }
    array_push($dataTable, $dataTableHeader);
    foreach ($dataTableRows as $dataTableRow){
        array_push($dataTable, $dataTableRow);
    }

    return json_encode($dataTable);
}

function createGoogleChartsOptions($options){

}
function renderC3Charts(){

}